#!/bin/sh

# Required environment variables:
#
# DATABASE
#   Path to a sqlite3 database containing the measurement data.
#
# FIRST
#   ISO 8601 date of the first day of data to fetch.
#
# LAST
#   ISO 8601 date of the last day of data to fetch.
#
# EXTENSION
#   The file extension of the requested resource.
#   This is a lower case string containing the leading dot, e.g. ".png", or is
#   otherwise empty.

/usr/local/bin/sqlite3 "$DATABASE" <<END_SQL
.headers off
.mode tabs
.timeout 1000 -- milliseconds
.output dump.txt
select temperature_celsius, sum(dupe_count + 1)
from reading
where when_iso between '$FIRST' and '$LAST' or instr(when_iso, '$LAST') = 1
group by temperature_celsius
order by temperature_celsius;
END_SQL

if [ "$EXTENSION" = '.png' ]; then
  printf 'image/png' >response/headers/Content-Type
  terminal="pngcairo nocrop enhanced size 1024,768 font 'arial,12.0' background rgb 'antiquewhite'"
else
  EXTENSION='.svg' # for later reference
  printf 'image/svg+xml' >response/headers/Content-Type
  terminal="svg size 1024,768 fixed enhanced font 'Arial,12' butt dashlength 1.0 background rgb 'antiquewhite'"
fi

>response/body gnuplot <<END_GNUPLOT
set encoding utf8

set xlabel 'Temperature (Â°C)'
set ylabel 'Frequency'

set boxwidth 0.9 relative
set style fill solid 1.0

set title 'Temperature Histogram'

set terminal $terminal

set tics front

plot 'dump.txt' using 1:2 notitle with boxes
END_GNUPLOT

if [ "$EXTENSION" = '.svg' ]; then
  # Edit the resulting SVG's <title> in place.
  xmlstarlet edit --inplace --update "//_:svg/_:title" --value 'Temperature Histogram' response/body
fi

